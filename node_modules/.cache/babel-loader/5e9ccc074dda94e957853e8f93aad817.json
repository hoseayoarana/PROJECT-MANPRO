{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\MANPRO\\\\PROJ FIX\\\\FIX\\\\footprint-calculator-masta(rev)\\\\src\\\\components\\\\Sidebar.js\";\nimport React from 'react';\nimport './sidebar.css';\nimport biking from '../images/biking.png';\nimport driving from '../images/driving.png';\nimport transit from '../images/transit.png';\nimport walking from '../images/walking.png';\nimport biking_icon from '../images/biking_icon.png';\nimport driving_icon from '../images/driving_icon.png';\nimport transit_icon from '../images/transit_icon.png';\nimport walking_icon from '../images/walking_icon.png';\nimport title from '../images/title.png';\nimport { getYourLocation } from './App';\nconst RENDERMODE = {\n  0: 'Initial',\n  1: 'Travel'\n};\n\nclass Sidebar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      option: 'leaveNow',\n      time: '',\n      date: ''\n    };\n\n    this.setClosestDateAndTime = () => {\n      let date = getCurrentDate();\n      let time = getDefaultTime();\n      this.setState({\n        time,\n        date\n      });\n    };\n\n    this.renderMode = (event = null) => {\n      if (event && !(event.target.tagName === 'SELECT' || event.target.tagName === 'INPUT' && event.keyName === 'ENTER')) {\n        return false;\n      }\n\n      if (this.props.destination && this.props.currentLocation) {\n        if (this.props.transportation) {\n          return RENDERMODE[1];\n        } else {\n          return RENDERMODE[0];\n        }\n      } else {\n        return false;\n      }\n    };\n\n    this.handleInput = event => {\n      if (event.target.value === 'Your location') {\n        getYourLocation(position => {\n          this.props.onChange('currentLocation', \"\".concat(position.coords.latitude, \",\").concat(position.coords.longitude));\n          this.checkModeAndRenderMap();\n        }, () => alert('Please accept location request!'));\n      } else {\n        this.props.onChange(event.target.name, event.target.value);\n      }\n    };\n\n    this.getNewestState = (field, value) => {\n      if (field === 'option') {\n        if (this.state.option === 'leaveNow') {\n          return 'departureTime';\n        }\n\n        return this.state.option;\n      } else if (value === 'leaveNow') {\n        return '';\n      } else {\n        return this.state[field];\n      }\n    };\n\n    this.handleSelect = event => {\n      let value = event.target.value;\n      this.setState({\n        [event.target.name]: value\n      });\n\n      if (value === 'leaveNow') {\n        value = 'departureTime';\n        this.setState({\n          date: '',\n          time: ''\n        });\n      } else if (!this.state.date && !this.state.time && (value === 'departureTime' || value === 'arrivalTime')) {\n        this.setClosestDateAndTime();\n      }\n\n      if (this.renderMode(event) === RENDERMODE[1]) {\n        this.props.renderMapWithTMode(this.props.travelMode, event.target.name === 'option' ? value : this.getNewestState('option'), getTime(event.target.name === 'date' ? value : this.getNewestState('date', value), event.target.name === 'time' ? value : this.getNewestState('time', value)));\n      } else if (this.renderMode(event) === RENDERMODE[0]) {\n        this.props.renderMap();\n      }\n    };\n\n    this.checkModeAndRenderMap = () => {\n      if (this.renderMode() === RENDERMODE[1]) {\n        this.props.renderMapWithTMode(this.props.travelMode, this.getNewestState('option', this.state.option), getTime(this.state.date, this.state.time));\n      } else if (this.renderMode() === RENDERMODE[0]) {\n        this.props.renderMap();\n      }\n    };\n\n    this.onEnterHit = event => {\n      if (event.key === 'Enter') {\n        this.checkModeAndRenderMap();\n      }\n    };\n\n    this.handleTransportation = travelMode => {\n      this.props.onClick(travelMode);\n\n      if (this.renderMode() === RENDERMODE[1]) {\n        this.props.renderMapWithTMode(travelMode, this.getNewestState('option', this.state.option), getTime(this.state.date, this.state.time));\n      }\n    };\n\n    this.renderTimeOptions = () => {\n      let hour = 0;\n      let min = '00';\n      let options = [];\n\n      for (let i = 0; i < 48; i++) {\n        let time = \"\".concat(hour, \":\").concat(min);\n        let displayTime = \"\".concat(hour > 12 ? hour - 12 : hour, \":\").concat(min);\n        options.push(React.createElement(\"option\", {\n          value: time,\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, displayTime, \" \", hour >= 12 ? 'PM' : 'AM'));\n\n        if (i % 2) {\n          hour += 1;\n          min = '00';\n        } else {\n          min = '30';\n        }\n      }\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, options.map(option => option));\n    };\n\n    this.renderDateOptions = () => {\n      let options = [];\n      let date = new Date();\n\n      for (let i = 0; i < 14; i++) {\n        options.push(React.createElement(\"option\", {\n          value: getCurrentDate(date),\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, getCurrentDate(date)));\n        date.setDate(date.getDate() + 1);\n      }\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, options.map(option => option));\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"sidebar bm-menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"carbon emissions calculator\",\n      src: title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      htmlFor: \"currentLocation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"A\"), React.createElement(\"input\", {\n      id: \"currentLocation\",\n      name: \"currentLocation\",\n      type: \"text\",\n      value: this.props.currentLocation,\n      onChange: e => this.handleInput(e, 'currentLocation'),\n      onKeyDown: this.onEnterHit,\n      placeholder: \"starting point\",\n      list: \"locationList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }), React.createElement(\"datalist\", {\n      id: \"locationList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"Your location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"destination\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"B\"), React.createElement(\"input\", {\n      id: \"destination\",\n      name: \"destination\",\n      type: \"text\",\n      value: this.props.destination,\n      onChange: e => this.handleInput(e, 'destination'),\n      onKeyDown: this.onEnterHit,\n      placeholder: \"ending point\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      id: \"option\",\n      name: \"option\",\n      type: \"text\",\n      value: this.state.option,\n      onChange: e => this.handleSelect(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"leaveNow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"leave now\"), React.createElement(\"option\", {\n      value: \"departureTime\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"leave at\"), React.createElement(\"option\", {\n      value: \"arrivalTime\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"arrive by\")), this.state.option === 'leaveNow' ? null : React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      id: \"time\",\n      name: \"time\",\n      type: \"text\",\n      value: this.state.time,\n      onChange: e => this.handleSelect(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, this.renderTimeOptions()), React.createElement(\"select\", {\n      id: \"date\",\n      name: \"date\",\n      type: \"text\",\n      value: this.state.date,\n      onChange: e => this.handleSelect(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, this.renderDateOptions())), React.createElement(\"ul\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      onClick: () => this.handleTransportation('DRIVING'),\n      className: this.props.transportation === 'DRIVING' ? 'chosen' : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"\",\n      src: driving_icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    })), React.createElement(\"img\", {\n      alt: \"driving\",\n      src: driving,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    })), React.createElement(\"li\", {\n      onClick: () => this.handleTransportation('TRANSIT'),\n      className: this.props.transportation === 'TRANSIT' ? 'chosen' : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"\",\n      src: transit_icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    })), React.createElement(\"img\", {\n      alt: \"transit\",\n      src: transit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    })), React.createElement(\"li\", {\n      onClick: () => this.handleTransportation('BICYCLING'),\n      className: this.props.transportation === 'BICYCLING' ? 'chosen' : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"\",\n      src: biking_icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    })), React.createElement(\"img\", {\n      alt: \"biking\",\n      src: biking,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    })), React.createElement(\"li\", {\n      onClick: () => this.handleTransportation('WALKING'),\n      className: this.props.transportation === 'WALKING' ? 'chosen' : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"\",\n      src: walking_icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    })), React.createElement(\"img\", {\n      alt: \"walking\",\n      src: walking,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      id: \"DirectionsPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction getTime(date, time) {\n  if (date && time) {\n    return new Date(date + ' ' + time);\n  } else {\n    return new Date();\n  }\n}\n\nfunction getDefaultTime() {\n  let now = new Date();\n  let currentHour = now.getHours();\n  let currentMin = now.getMinutes();\n\n  if (currentMin < 30) {\n    currentMin = 30;\n  } else {\n    currentMin = '00';\n    currentHour++;\n  }\n\n  return \"\".concat(currentHour, \":\").concat(currentMin);\n}\n\nfunction getCurrentDate(date = new Date()) {\n  date = date.toString().split(' ').splice(1, 3).join(' ');\n  return date;\n}\n\nexport default Sidebar;","map":{"version":3,"sources":["D:\\Documents\\MANPRO\\PROJ FIX\\FIX\\footprint-calculator-masta(rev)\\src\\components\\Sidebar.js"],"names":["React","biking","driving","transit","walking","biking_icon","driving_icon","transit_icon","walking_icon","title","getYourLocation","RENDERMODE","Sidebar","Component","state","option","time","date","setClosestDateAndTime","getCurrentDate","getDefaultTime","setState","renderMode","event","target","tagName","keyName","props","destination","currentLocation","transportation","handleInput","value","position","onChange","coords","latitude","longitude","checkModeAndRenderMap","alert","name","getNewestState","field","handleSelect","renderMapWithTMode","travelMode","getTime","renderMap","onEnterHit","key","handleTransportation","onClick","renderTimeOptions","hour","min","options","i","displayTime","push","map","renderDateOptions","Date","setDate","getDate","render","e","now","currentHour","getHours","currentMin","getMinutes","toString","split","splice","join"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './sidebar.css';\nimport biking from '../images/biking.png';\nimport driving from '../images/driving.png';\nimport transit from '../images/transit.png';\nimport walking from '../images/walking.png';\nimport biking_icon from '../images/biking_icon.png';\nimport driving_icon from '../images/driving_icon.png';\nimport transit_icon from '../images/transit_icon.png';\nimport walking_icon from '../images/walking_icon.png';\nimport title from '../images/title.png';\nimport { getYourLocation } from './App';\n\nconst RENDERMODE = { 0: 'Initial', 1: 'Travel' };\n\nclass Sidebar extends React.Component {\n  state = {\n    option: 'leaveNow',\n    time: '',\n    date: ''\n  };\n\n  setClosestDateAndTime = () => {\n    let date = getCurrentDate();\n    let time = getDefaultTime();\n    this.setState({ time, date });\n  };\n\n  renderMode = (event = null) => {\n    if (\n      event &&\n      !(\n        event.target.tagName === 'SELECT' ||\n        (event.target.tagName === 'INPUT' && event.keyName === 'ENTER')\n      )\n    ) {\n      return false;\n    }\n    if (this.props.destination && this.props.currentLocation) {\n      if (this.props.transportation) {\n        return RENDERMODE[1];\n      } else {\n        return RENDERMODE[0];\n      }\n    } else {\n      return false;\n    }\n  };\n\n  handleInput = event => {\n    if (event.target.value === 'Your location') {\n      getYourLocation(\n        position => {\n          this.props.onChange(\n            'currentLocation',\n            `${position.coords.latitude},${position.coords.longitude}`\n          );\n          this.checkModeAndRenderMap();\n        },\n        () => alert('Please accept location request!')\n      );\n    } else {\n      this.props.onChange(event.target.name, event.target.value);\n    }\n  };\n\n  getNewestState = (field, value) => {\n    if (field === 'option') {\n      if (this.state.option === 'leaveNow') {\n        return 'departureTime';\n      }\n      return this.state.option;\n    } else if (value === 'leaveNow') {\n      return '';\n    } else {\n      return this.state[field];\n    }\n  };\n\n  handleSelect = event => {\n    let value = event.target.value;\n    this.setState({ [event.target.name]: value });\n\n    if (value === 'leaveNow') {\n      value = 'departureTime';\n      this.setState({ date: '', time: '' });\n    } else if (\n      !this.state.date &&\n      !this.state.time &&\n      (value === 'departureTime' || value === 'arrivalTime')\n    ) {\n      this.setClosestDateAndTime();\n    }\n\n    if (this.renderMode(event) === RENDERMODE[1]) {\n      this.props.renderMapWithTMode(\n        this.props.travelMode,\n        event.target.name === 'option' ? value : this.getNewestState('option'),\n        getTime(\n          event.target.name === 'date'\n            ? value\n            : this.getNewestState('date', value),\n          event.target.name === 'time'\n            ? value\n            : this.getNewestState('time', value)\n        )\n      );\n    } else if (this.renderMode(event) === RENDERMODE[0]) {\n      this.props.renderMap();\n    }\n  };\n\n  checkModeAndRenderMap = () => {\n    if (this.renderMode() === RENDERMODE[1]) {\n      this.props.renderMapWithTMode(\n        this.props.travelMode,\n        this.getNewestState('option', this.state.option),\n        getTime(this.state.date, this.state.time)\n      );\n    } else if (this.renderMode() === RENDERMODE[0]) {\n      this.props.renderMap();\n    }\n  };\n\n  onEnterHit = event => {\n    if (event.key === 'Enter') {\n      this.checkModeAndRenderMap();\n    }\n  };\n\n  handleTransportation = travelMode => {\n    this.props.onClick(travelMode);\n    if (this.renderMode() === RENDERMODE[1]) {\n      this.props.renderMapWithTMode(\n        travelMode,\n        this.getNewestState('option', this.state.option),\n        getTime(this.state.date, this.state.time)\n      );\n    }\n  };\n\n  renderTimeOptions = () => {\n    let hour = 0;\n    let min = '00';\n    let options = [];\n\n    for (let i = 0; i < 48; i++) {\n      let time = `${hour}:${min}`;\n      let displayTime = `${hour > 12 ? hour - 12 : hour}:${min}`;\n      options.push(\n        <option value={time} key={i}>\n          {displayTime} {hour >= 12 ? 'PM' : 'AM'}\n        </option>\n      );\n      if (i % 2) {\n        hour += 1;\n        min = '00';\n      } else {\n        min = '30';\n      }\n    }\n    return <React.Fragment>{options.map(option => option)}</React.Fragment>;\n  };\n\n  renderDateOptions = () => {\n    let options = [];\n    let date = new Date();\n    for (let i = 0; i < 14; i++) {\n      options.push(\n        <option value={getCurrentDate(date)} key={i}>\n          {getCurrentDate(date)}\n        </option>\n      );\n      date.setDate(date.getDate() + 1);\n    }\n    return <React.Fragment>{options.map(option => option)}</React.Fragment>;\n  };\n\n  render() {\n    return (\n      <div className='sidebar bm-menu'>\n        <h1>\n          <img alt='carbon emissions calculator' src={title} />\n        </h1>\n        <label htmlFor='currentLocation'>A</label>\n        <input\n          id='currentLocation'\n          name='currentLocation'\n          type='text'\n          value={this.props.currentLocation}\n          onChange={e => this.handleInput(e, 'currentLocation')}\n          onKeyDown={this.onEnterHit}\n          placeholder='starting point'\n          list='locationList'\n        />\n        <datalist id='locationList'>\n          <option value='Your location' />\n        </datalist>\n        <br />\n        <label htmlFor='destination'>B</label>\n        <input\n          id='destination'\n          name='destination'\n          type='text'\n          value={this.props.destination}\n          onChange={e => this.handleInput(e, 'destination')}\n          onKeyDown={this.onEnterHit}\n          placeholder='ending point'\n        />\n        <select\n          id='option'\n          name='option'\n          type='text'\n          value={this.state.option}\n          onChange={e => this.handleSelect(e)}\n        >\n          <option value='leaveNow'>leave now</option>\n          <option value='departureTime'>leave at</option>\n          <option value='arrivalTime'>arrive by</option>\n        </select>\n        {this.state.option === 'leaveNow' ? null : (\n          <React.Fragment>\n            <select\n              id='time'\n              name='time'\n              type='text'\n              value={this.state.time}\n              onChange={e => this.handleSelect(e)}\n            >\n              {this.renderTimeOptions()}\n            </select>\n            <select\n              id='date'\n              name='date'\n              type='text'\n              value={this.state.date}\n              onChange={e => this.handleSelect(e)}\n            >\n              {this.renderDateOptions()}\n            </select>\n          </React.Fragment>\n        )}\n        <ul className='buttons'>\n          <li\n            onClick={() => this.handleTransportation('DRIVING')}\n            className={\n              this.props.transportation === 'DRIVING' ? 'chosen' : null\n            }\n          >\n            <span>\n              <img alt='' src={driving_icon} />\n            </span>\n            <img alt='driving' src={driving} />\n          </li>\n          <li\n            onClick={() => this.handleTransportation('TRANSIT')}\n            className={\n              this.props.transportation === 'TRANSIT' ? 'chosen' : null\n            }\n          >\n            <span>\n              <img alt='' src={transit_icon} />\n            </span>\n            <img alt='transit' src={transit} />\n          </li>\n          <li\n            onClick={() => this.handleTransportation('BICYCLING')}\n            className={\n              this.props.transportation === 'BICYCLING' ? 'chosen' : null\n            }\n          >\n            <span>\n              <img alt='' src={biking_icon} />\n            </span>\n            <img alt='biking' src={biking} />\n          </li>\n          <li\n            onClick={() => this.handleTransportation('WALKING')}\n            className={\n              this.props.transportation === 'WALKING' ? 'chosen' : null\n            }\n          >\n            <span>\n              <img alt='' src={walking_icon} />\n            </span>\n            <img alt='walking' src={walking} />\n          </li>\n        </ul>\n        <div id='DirectionsPanel' />\n      </div>\n    );\n  }\n}\n\nfunction getTime(date, time) {\n  if (date && time) {\n    return new Date(date + ' ' + time);\n  } else {\n    return new Date();\n  }\n}\n\nfunction getDefaultTime() {\n  let now = new Date();\n  let currentHour = now.getHours();\n  let currentMin = now.getMinutes();\n  if (currentMin < 30) {\n    currentMin = 30;\n  } else {\n    currentMin = '00';\n    currentHour++;\n  }\n  return `${currentHour}:${currentMin}`;\n}\n\nfunction getCurrentDate(date = new Date()) {\n  date = date\n    .toString()\n    .split(' ')\n    .splice(1, 3)\n    .join(' ');\n  return date;\n}\n\nexport default Sidebar;\n"]},"metadata":{},"sourceType":"module"}